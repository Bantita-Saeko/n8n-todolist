{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô Google Calendar\n\n‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å {{$node[\"Switch: Check action\"].json[\"text\"]}}  \n‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n\nüìå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á:\n{\n  \"‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\": \"\",\n  \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\": \"\",\n  \"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\": \"YYYY-MM-DD\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\": \"HH:mm\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\": \"HH:mm\",\n  \"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\": \"\",\n  \"eventId\": \"\",\n  \"action\": \"\"\n}\n\n- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ JSON Array ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡πÇ‡∏î‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞ object ‡∏°‡∏µ key:\n{\n  \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\": \"\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°\": \"HH:mm\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\": \"HH:mm\",\n  \"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\": \"\",\n  \"eventId\": \"\",\n  \"action\": \"\"\n}\n\nüìå ‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ ‚Äú‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‚Äù ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD)\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ ‚Äú‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‚Äù ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‚Äú‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 21 ‡∏Å.‡∏¢. 2568‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú21 ‡∏Å.‡∏¢.‚Äù ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ ‡∏Ñ.‡∏®.\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏µ ‚Üí ‡πÉ‡∏ä‡πâ‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‚Üí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏´‡∏ô‡πâ‡∏≤\n- ‡πÉ‡∏ä‡πâ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏™‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô \"2025-09-03\"\n- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢\n\nüìå ‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤:\n- ‡∏ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô \"\" (string ‡∏ß‡πà‡∏≤‡∏á)\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô ‚Üí ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (now)\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏õ‡∏µ ‚Üí ‡πÉ‡∏ä‡πâ‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏µ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤ ‚Üí ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ \"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\" ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (YYYY-MM-DD) (NOW)\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ \"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\" ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô + 1 ‡∏ß‡∏±‡∏ô (YYYY-MM-DD) (NOW+1)\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏µ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏´‡∏ô‡πâ‡∏≤\n- ‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ 2025\n\n\nüìå ‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î action:\n- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\" ‡∏´‡∏£‡∏∑‡∏≠ \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\" + \"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\" + \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\" + \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\" ‚Üí \"action\": \"create\"\n- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\" ‡πÅ‡∏•‡∏∞ \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\" ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô \"19:00-20:00\" ‚Üí \"action\": \"reschedule\"\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°/‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‚Üí \"action\": \"incomplete\"\n- ‡πÑ‡∏°‡πà‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡πÉ‡∏ä‡πâ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏≠‡∏á\n\nüìå ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à:\n- \"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡πÄ‡∏ß‡∏•‡∏≤ 12.00-13.00 ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£\"\n- \"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ ‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏ß‡∏•‡∏≤ 15.00-16.00\"\n- \"‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 21 ‡∏Å.‡∏¢. 2568 ‡πÄ‡∏ß‡∏•‡∏≤ 13.00-14.00 ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó B\"\n\nüìå ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:\n[\n  ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡πÄ‡∏ß‡∏•‡∏≤ 12:00-13:00\nJSON Output:\n{\n  \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\": \"‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°\",\n  \"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\": \"2025-10-04\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\": \"12:00\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\": \"13:00\",\n  \"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\": \"\",\n  \"action\": \"create\"\n}\n\n‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ ‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡πÄ‡∏ß‡∏•‡∏≤ 15:00-16:00\nJSON Output:\n{\n  \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\": \"‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°\",\n  \"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\": \"2025-10-05\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\": \"15:00\",\n  \"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\": \"16:00\",\n  \"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\": \"\",\n  \"action\": \"create\"\n}\n]\n\n‚ö†Ô∏è ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏•‡πâ‡∏ß‡∏ô ‡πÜ ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
        "options": {}
      },
      "id": "b8b26ab0-7276-4508-89a9-202c8a2328fe",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -2928,
        1856
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "id": "2b99ea85-d2a0-45a3-9b48-b2b7e74ba3b8",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        -2960,
        2032
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "UOvTpeuF62UEwmkp",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°  (/)\n- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Calendar/\n- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô /\n- ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏≥ ‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ /\n‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ß :D",
        "width": 300,
        "color": 6
      },
      "id": "e223d63e-3058-431b-978f-8dd9a4c63309",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° 2 (/)\n- ‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ç‡∏≠‡∏á User /\n- ‡∏Ñ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Line-Bot /\n‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ô‡∏∂‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ß ‡∏™‡∏π‡πâ‡∏ß‡∏™‡∏π‡πâ‡∏ß‡∏ß‡∏ß‡∏ß :D :D",
        "height": 140,
        "width": 360,
        "color": 3
      },
      "id": "17ca0a8b-0ca2-4ac6-b841-b2957fdc846a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        352,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"üìÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"size\": \"mega\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"üìÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n              \"weight\": \"bold\",\n              \"size\": \"lg\",\n              \"wrap\": true\n            },\n            {\n              \"type\": \"box\",\n              \"layout\": \"vertical\",\n              \"spacing\": \"sm\",\n              \"contents\": [\n                {\n                  \"type\": \"text\",\n                  \"text\": \"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢'] }}\",\n                  \"wrap\": true\n                },\n                {\n                  \"type\": \"text\",\n                  \"text\": \"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'] }}\",\n                  \"wrap\": true\n                },\n                {\n                  \"type\": \"text\",\n                  \"text\": \"‡πÄ‡∏ß‡∏•‡∏≤: {{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°'] }} - {{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î'] }} ‡∏ô.\",\n                  \"wrap\": true\n                },\n                {\n                  \"type\": \"text\",\n                  \"text\": \"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'] }}\",\n                  \"wrap\": true\n                }\n              ]\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"box\",\n              \"layout\": \"horizontal\",\n              \"spacing\": \"sm\",\n              \"contents\": [\n                {\n                  \"type\": \"button\",\n                  \"style\": \"primary\",\n                  \"color\": \"#28a745\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"‚è∞ ‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤\",\n                    \"data\": \"action=notify_early&eventId={{ $json.id }}\"\n                  }\n                },\n                {\n                  \"type\": \"button\",\n                  \"style\": \"secondary\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"üîî ‡πÅ‡∏à‡πâ‡∏á‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤\",\n                    \"data\": \"action=notify_exact&eventId={{ $json.id }}\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"box\",\n              \"layout\": \"horizontal\",\n              \"spacing\": \"sm\",\n              \"contents\": [\n                {\n                  \"type\": \"button\",\n                  \"style\": \"primary\",\n                  \"color\": \"#007bff\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"üîÑ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=reschedule&eventId={{ $json.id }}\"\n                  }\n                },\n                {\n                  \"type\": \"button\",\n                  \"style\": \"secondary\",\n                  \"color\": \"#dc3545\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=cancel&eventId={{ $json.id }}\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"box\",\n              \"layout\": \"vertical\",\n              \"contents\": [\n                {\n                  \"type\": \"button\",\n                  \"style\": \"primary\",\n                  \"color\": \"#1E90FF\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                    \"data\": \"action=request_schedule&eventId={{ $json.id }}\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "ac3a11af-ab91-44ca-b822-08c883795bcb",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -256,
        2240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç\n- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å rich menu ‡∏ñ‡∏π‡∏Å‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÅ‡∏ó‡∏ô‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á user\n- ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á Line ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏≤‡∏£ dead air \n- ‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏á User ‡πÑ‡∏î‡πâ /\n- ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ /\n- ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ\n- ‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏î‡πâ (/)\n:( :( :(",
        "height": 280,
        "width": 420
      },
      "id": "0e01ba38-9366-4988-b765-f5d7d49064ad",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ 3 \n- ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ 5 min ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏•‡∏¢ (/)",
        "height": 80,
        "width": 440
      },
      "id": "61b3746d-2cc4-4fcf-bfbb-0506666e2ab3",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        928
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"üìÜ ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡πà‡∏∞ üòä\\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏´‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞\\n\\n‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 12 ‡∏™.‡∏Ñ. ‡πÄ‡∏ß‡∏•‡∏≤ 14.00-15.00\\n‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î ‚Äò‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‚Äô ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\",\n              \"wrap\": true\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"horizontal\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"secondary\",\n              \"color\": \"#D32F2F\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å\",\n                \"data\": \"action=cancel&eventId={{ $json.eventId }}\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "ca7e1850-a455-4f16-9659-d80cce23c530",
      "name": "HTTP Request2 : ‡πÉ‡∏´‡πâ user ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        400
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏° (/)\n- **‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå 2 ‡∏ó‡πà‡∏≤‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°**\n  - ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÅ‡∏Å‡πâ‡∏ß‡πÉ‡∏à :\n     - ‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡πà‡∏≤ ‡πÅ‡∏≠‡∏û To do list ‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ\n  - ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÅ‡∏≠‡πâ :\n     - ‡∏™‡∏£‡∏∏‡∏õ schedule ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏±‡πâ‡∏ô‡πÜ \n     - ‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß / ‡∏Ñ‡πâ‡∏≤‡∏á / ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\n     - ‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡πà‡∏≤‡∏ô Line\n- **‡∏£‡∏∞‡πÅ‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á User**\n  - (Old Notify) ---> ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏•‡∏ô‡πå (Line)\n  - (New Notify) ---> ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô Google Calendar \n- **‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°**\n  - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ô‡∏±‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏ß‡πâ\n- **‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á server ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö cloud**\n- **‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏à‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô**",
        "height": 400,
        "width": 560,
        "color": 6
      },
      "id": "03316e7e-89b0-4c9b-8921-b6a71c6114b0",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        256
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà to do list ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ\n- ‡πÄ‡∏û‡∏¥‡πà‡∏° / ‡∏•‡∏ö / ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏û‡∏¥‡πà‡∏° ‚Äú‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‚Äù, ‡∏•‡∏ö ‚Äú‡πÑ‡∏õ‡∏´‡πâ‡∏≤‡∏á‚Äù, ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ /\n- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ / ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ï‡∏≤‡∏¢ (Due Date) ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏£ /\n- ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (Notification / Reminder) ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤ /\n- ‡∏ï‡∏¥‡∏î‡∏î‡∏≤‡∏ß / ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (Priority) \n  - ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏á‡∏≤‡∏ô‡πÑ‡∏´‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏´‡∏£‡∏∑‡∏≠‡∏î‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î\n‡πÅ‡∏™‡∏î‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à / ‡∏ã‡πà‡∏≠‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß\n- ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (View mode)\n  -  ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡∏≤‡∏£‡∏≤‡∏á, ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô, ‡∏´‡∏£‡∏∑‡∏≠ list\n\n",
        "height": 440,
        "width": 560,
        "color": 3
      },
      "id": "700a27c7-8c4a-4e58-9b9a-5b4a6bd1fd46",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        128,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà to do list ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ\n- AI ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Smart Scheduling) \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏á 2 ‡∏ä‡∏°. ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ AI ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà task ‡∏•‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢\n- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (Task Analytics) \n  - ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ä‡πâ‡∏≤/‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô ‡∏á‡∏≤‡∏ô‡πÑ‡∏´‡∏ô‡∏ä‡∏≠‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ô‡∏¥‡∏™‡∏±‡∏¢/‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (Habit Tracker / Goal Progress) \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏¢‡∏≤‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‚Üí ‡πÉ‡∏´‡πâ track ‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á\n- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (LINE Bot, Google Assistant, Alexa) \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô LINE ‡πÅ‡∏•‡πâ‡∏ß To Do List ‡∏Å‡πá‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n- ‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô / ‡∏ó‡∏≥‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô (Collaborative Task) \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô\n- ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ã‡πâ‡∏≥‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô (Flexible Recurring Tasks) \n  - ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏±‡∏ô‚Äù, ‚Äú‡∏ó‡∏∏‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏£‡∏Å‚Äù\n- ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå / ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û / ‡πÄ‡∏™‡∏µ‡∏¢‡∏á / ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡∏±‡∏ö Task ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ô‡∏±‡πâ‡∏ô \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö ‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°\n- ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° / Email / LINE Bot ‡∏ö‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß\n- ‡πÇ‡∏´‡∏°‡∏î‡πÇ‡∏ü‡∏Å‡∏±‡∏™ / Pomodoro ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ò‡∏¥‡∏Ç‡∏ì‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ 25 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏û‡∏±‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ\n- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å / ‡πÇ‡∏ô‡πâ‡∏ï‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏á‡∏≤‡∏ô \n  - ‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏î‡∏ß‡πà‡∏≤ ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏á, ‡∏¢‡∏≤‡∏Å‡∏ï‡∏£‡∏á‡πÑ‡∏´‡∏ô",
        "height": 560,
        "width": 580,
        "color": 7
      },
      "id": "16d82cfd-33e1-44e5-ac32-640b7d5c0fcc",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        736,
        96
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bot-line",
        "responseMode": "=onReceived",
        "options": {}
      },
      "id": "cd5142ae-e922-43d7-8729-8d98563edfb4",
      "name": "Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -5168,
        1056
      ],
      "webhookId": "8964b0e2-ea33-48c7-ba67-3b4ca787e1d8",
      "typeVersion": 2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "oauth-callback",
        "authentication": "basicAuth",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "f595cf57-5aa7-4b17-8748-99d267ddb47f",
      "name": "Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£ Login ‡∏à‡∏≤‡∏Å User",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -3696,
        2192
      ],
      "webhookId": "15e9d09c-b508-4729-b07c-62c6f4dc8c6c",
      "typeVersion": 2,
      "credentials": {
        "httpBasicAuth": {
          "id": "DvgjJFto23w1WH2I",
          "name": "admin:ink7484"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{$json.line_user_id}}"
            },
            {
              "name": "messages",
              "value": "={{$json.messages}}"
            }
          ]
        },
        "options": {}
      },
      "id": "f4b68807-7a24-4bea-976a-a7b7134a7b5c",
      "name": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user4",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        896
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° 3\n- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ user ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô‡πÑ‡∏î‡πâ\n- ‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£",
        "height": 140,
        "width": 360,
        "color": 4
      },
      "id": "4ee0c28f-de66-43a3-ab76-b3b4e98cbbc9",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° 4\n- ‡∏ó‡∏≥‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1, 2\n- ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ 5 ‡∏Ñ‡∏ô\n- ‡∏ó‡∏≥ Sequent Diagram",
        "height": 144,
        "width": 280,
        "color": 2
      },
      "id": "adff9317-c988-42c9-aa6a-3de60ca1d8b0",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1136,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://oauth2.googleapis.com/token",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "=application/x-www-form-urlencoded"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "code",
              "value": "={{ $json.body.code }}"
            },
            {
              "name": "client_id",
              "value": "=564269152078-8amd2iqgc6o20294u2k97jngevian8lg.apps.googleusercontent.com"
            },
            {
              "name": "client_secret",
              "value": "=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"
            },
            {
              "name": "redirect_uri",
              "value": "=https://logical-factor-464404-d1.web.app/oauth-callback"
            },
            {
              "name": "grant_type",
              "value": "=authorization_code"
            },
            {
              "name": "code_verifier",
              "value": "={{ $json.body.code_verifier }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e96d6488-35ca-4c8a-ae64-16c48f5ea748",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -3264,
        2192
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO google_tokens (line_user_id, access_token, refresh_token, expires_in, scope, token_type, created_at)\nVALUES (\n  '{{ $node[\"Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID\"].json.line_user_id }}',\n  '{{ $json.access_token }}',\n  '{{ $json.refresh_token }}',\n  {{ $json.expires_in }},\n  '{{ $json.scope }}',\n  '{{ $json.token_type }}',\n  NOW()\n)\nON DUPLICATE KEY UPDATE\n  access_token = VALUES(access_token),\n  refresh_token = VALUES(refresh_token),\n  expires_in = VALUES(expires_in),\n  scope = VALUES(scope),\n  token_type = VALUES(token_type),\n  created_at = NOW();\n",
        "options": {}
      },
      "id": "b53ad945-4f5a-4646-a59b-994bb63d5411",
      "name": "Execute a SQL query",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -3008,
        2192
      ],
      "typeVersion": 2.4,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function base64Decode(str) {\n  if (!str) return null;\n  return Buffer.from(str, 'base64').toString('utf-8');\n}\n\nreturn items.map(item => {\n  const stateEncoded = item.json.body?.state; // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á state ‡πÉ‡∏ô body\n\n  if (!stateEncoded) {\n    console.log('Missing state in item:', item.json);\n    return item;\n  }\n\n  let stateDecoded;\n  try {\n    const decodedStr = base64Decode(stateEncoded);\n    stateDecoded = JSON.parse(decodedStr);\n  } catch (error) {\n    throw new Error('Failed to decode or parse state: ' + error.message);\n  }\n\n  if (!stateDecoded.uid) {\n    throw new Error('uid not found in decoded state');\n  }\n\n  item.json.line_user_id = stateDecoded.uid;\n\n  return item;\n});\n"
      },
      "id": "d4cf916f-cc01-4fcc-8582-e5d643a81e11",
      "name": "Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID",
      "type": "n8n-nodes-base.code",
      "position": [
        -3488,
        2192
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\nconst now = new Date();\nconst dayOfWeek = now.getDay(); // 0=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå, 1=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ...\nconst diffToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n\nconst monday = new Date(now);\nmonday.setDate(now.getDate() - diffToMonday);\nmonday.setHours(0, 0, 0, 0);\n\nconst sunday = new Date(monday);\nsunday.setDate(monday.getDate() + 6);\nsunday.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: monday.toISOString(),\n    timeMax: sunday.toISOString(),\n  }\n}];\n"
      },
      "id": "8d260903-5e32-4490-a13b-6cb590d742d4",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\nconst now = new Date();\nconst dayOfWeek = now.getDay(); // 0=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå, 1=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ...\nconst diffToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n\nconst monday = new Date(now);\nmonday.setDate(now.getDate() - diffToMonday);\nmonday.setHours(0, 0, 0, 0);\n\nconst sunday = new Date(monday);\nsunday.setDate(monday.getDate() + 6);\nsunday.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: monday.toISOString(),\n    timeMax: sunday.toISOString(),\n  }\n}];\n"
      },
      "id": "ae94ea63-69b5-432a-8e72-efddd2f8bc75",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax2",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        208
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\nconst now = new Date();\nconst dayOfWeek = now.getDay(); // 0=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå, 1=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ...\nconst diffToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n\nconst monday = new Date(now);\nmonday.setDate(now.getDate() - diffToMonday);\nmonday.setHours(0, 0, 0, 0);\n\nconst sunday = new Date(monday);\nsunday.setDate(monday.getDate() + 6);\nsunday.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: monday.toISOString(),\n    timeMax: sunday.toISOString(),\n  }\n}];\n"
      },
      "id": "35ef9aed-7201-4014-8870-526068954a65",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax3",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        400
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\nconst now = new Date();\nconst dayOfWeek = now.getDay(); // 0=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå, 1=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ...\nconst diffToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n\nconst monday = new Date(now);\nmonday.setDate(now.getDate() - diffToMonday);\nmonday.setHours(0, 0, 0, 0);\n\nconst sunday = new Date(monday);\nsunday.setDate(monday.getDate() + 6);\nsunday.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: monday.toISOString(),\n    timeMax: sunday.toISOString(),\n  }\n}];\n"
      },
      "id": "a029b4eb-fb76-4d8b-8ad6-b8e91e70adef",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "670d48ad-9471-4118-9ad2-2d0e760b54df",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token1",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        0
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• events ‡∏à‡∏≤‡∏Å input node (HTTP Request ‡∏´‡∏£‡∏∑‡∏≠ node ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ events ‡∏°‡∏≤)\nconst events = items[0].json.items || [];\n\n// ‡∏î‡∏∂‡∏á line_user_id ‡∏à‡∏≤‡∏Å node ‡∏ä‡∏∑‡πà‡∏≠ \"Code : ‡∏î‡∏∂‡∏á userId ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤\"\nconst lineUserId = $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1\"].json.line_user_id || null;\n\nfunction toISOWithTimezone(date, offsetHours = 7) {\n  const tzOffset = offsetHours * 60;\n  const localDate = new Date(date.getTime() + tzOffset * 60 * 1000);\n  const year = localDate.getUTCFullYear();\n  const month = String(localDate.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(localDate.getUTCDate()).padStart(2, '0');\n  const hour = String(localDate.getUTCHours()).padStart(2, '0');\n  const minute = String(localDate.getUTCMinutes()).padStart(2, '0');\n  const second = String(localDate.getUTCSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day}T${hour}:${minute}:${second}+07:00`;\n}\n\n// ‡∏Å‡∏£‡∏≠‡∏á event ‡∏ó‡∏µ‡πà‡∏°‡∏µ start.dateTime ‡πÅ‡∏•‡∏∞ end.dateTime\nconst validEvents = events.filter(event => event.start && event.start.dateTime && event.end && event.end.dateTime);\n\nif (validEvents.length === 0) {\n  return [{ json: {} }];\n}\n\n// ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)\nconst latestEvent = validEvents.reduce((a, b) =>\n  new Date(a.start.dateTime) > new Date(b.start.dateTime) ? a : b\n);\n\nconst startTime = new Date(latestEvent.start.dateTime);\nconst endTime = new Date(latestEvent.end.dateTime);\n\nreturn [{\n  json: {\n    line_user_id: lineUserId,\n    title: latestEvent.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\",\n    eventId: latestEvent.id || null,\n    startTime: toISOWithTimezone(startTime),\n    endTime: toISOWithTimezone(endTime)\n  }\n}];\n"
      },
      "id": "cc0e360d-cb9d-4602-a78d-ad3283b7de87",
      "name": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1",
      "type": "n8n-nodes-base.code",
      "position": [
        -2096,
        0
      ],
      "typeVersion": 2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const userId = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId\n\nconst after = $input.first().json.notifyAt;\n\nreturn [\n  {\n    json: {\n      userId,\n      after\n    }\n  }\n];\n"
      },
      "id": "fc9bfa43-5f2c-45c1-bcdd-648c1149fb2c",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID1",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1'].json.timeMin }}&timeMax={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1'].json.timeMax }}&singleEvents=true&orderBy=startTime",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "e55faf57-7aeb-496d-9792-a62dc5be0978",
      "name": "HTTP Request : GetAll to Calendar1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2352,
        0
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events/{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.eventId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"summary\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.title }}\",\n  \"start\": {\n    \"dateTime\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.startTime }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  },\n  \"end\": {\n    \"dateTime\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.endTime }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  },\n  \"reminders\": {\n    \"useDefault\": false,\n    \"overrides\": [\n      { \"method\": \"popup\", \"minutes\": 60 },\n      { \"method\": \"popup\", \"minutes\": 10 }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "29d881a4-4411-4741-9fbf-40cdd1f74dfb",
      "name": "HTTP Request : Update to Calendar1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        0
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output || \"\";\nconsole.log(\"Raw input from AI Agent:\", raw);\n\nconst clean = raw.replace(/```json|```|\\n/g, \"\").trim();\nconsole.log(\"Cleaned input:\", clean);\n\nlet parsed;\ntry {\n  parsed = JSON.parse(clean);\n} catch (err) {\n  throw new Error(\"‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: \" + err.message);\n}\n\nconst currentYear = new Date().getFullYear();\n\n// ‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ\nif (!parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"]) {\n  const today = new Date();\n  const yyyy = today.getFullYear();\n  const mm = String(today.getMonth() + 1).padStart(2, '0');\n  const dd = String(today.getDate()).padStart(2, '0');\n  parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"] = `${yyyy}-${mm}-${dd}`;\n}\nconsole.log(\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:\", parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"]);\n\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤\nconst formatTime = (time) => {\n  if (!time) return null;\n  time = time.trim();\n  return time.length === 5 ? time + \":00\" : time;\n};\n\n// ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ\nconst startTime = parsed[\"‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°\"] || parsed[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\"] || parsed[\"start_time\"] || null;\nconst endTime = parsed[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\"] || parsed[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\"] || parsed[\"end_time\"] || null;\n\nconsole.log(\"‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°:\", startTime);\nconsole.log(\"‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î:\", endTime);\n\n// ‡πÄ‡∏ï‡∏¥‡∏° start_datetime ‡πÅ‡∏•‡∏∞ end_datetime ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ\nif (!parsed[\"start_datetime\"] && parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"] && startTime) {\n  parsed[\"start_datetime\"] = `${parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"]}T${formatTime(startTime)}`;\n}\nif (!parsed[\"end_datetime\"] && parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"] && endTime) {\n  parsed[\"end_datetime\"] = `${parsed[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"]}T${formatTime(endTime)}`;\n}\n\nconsole.log(\"start_datetime:\", parsed[\"start_datetime\"]);\nconsole.log(\"end_datetime:\", parsed[\"end_datetime\"]);\n\nreturn [{ json: parsed }];\n"
      },
      "id": "1689522f-5cee-4e99-bdb4-524fcbe09e4a",
      "name": "Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO",
      "type": "n8n-nodes-base.code",
      "position": [
        -2576,
        1856
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": \"‡πÇ‡∏≠‡πä‡∏∞‚ùóÔ∏è‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞üôè‚ú®\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "909bcccc-65c0-4484-871f-4868437fdad2",
      "name": "HTTP Request : ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -912,
        1696
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  if ($('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events && $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId) {\n    item.json.line_user_id = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId;\n  } else {\n    item.json.line_user_id = \"empty\";\n  }\n  return item;\n});\n"
      },
      "id": "d0df49ac-bc3e-438d-9f9b-597c08bcc5c6",
      "name": "Code : Extract LINE User ID",
      "type": "n8n-nodes-base.code",
      "position": [
        -912,
        2240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\n  AND created_at + INTERVAL expires_in SECOND > NOW()\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "bb752b3e-6ade-4ac2-b579-43af74c47b39",
      "name": "Execute a SQL query : Get Valid Access Token",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -688,
        2240
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"summary\": \"{{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢'] }}\",\n  \"description\": \"{{ $('Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO').item.json['‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'] }}\",\n  \"start\": {\n    \"dateTime\": \"{{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.startISO }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  },\n  \"end\": {\n    \"dateTime\": \"{{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.endISO }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  }\n}",
        "options": {}
      },
      "id": "53150e0a-883a-4876-9b4f-7e618ab9181f",
      "name": "HTTP Request : Create to Calendar1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -480,
        2240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚è≥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‚úÖ ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ \\n ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‚è∞‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤\",\n              \"wrap\": true,\n              \"weight\": \"bold\",\n              \"size\": \"md\"\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"box\",\n              \"layout\": \"horizontal\",\n              \"spacing\": \"sm\",\n              \"contents\": [\n                {\n                  \"type\": \"button\",\n                  \"style\": \"primary\",\n                  \"color\": \"#2196F3\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"üîÑ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=reschedule\"\n                  }\n                },\n                {\n                  \"type\": \"button\",\n                  \"style\": \"secondary\",\n                  \"color\": \"#D32F2F\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=cancel\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#2196F3\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "523901c0-3a53-4d3f-9f60-4e14088fa9d3",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        0
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• events ‡∏à‡∏≤‡∏Å input node (HTTP Request ‡∏´‡∏£‡∏∑‡∏≠ node ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ events ‡∏°‡∏≤)\nconst events = items[0].json.items || [];\n\n// ‡∏î‡∏∂‡∏á line_user_id ‡∏à‡∏≤‡∏Å node ‡∏ä‡∏∑‡πà‡∏≠ \"Code : ‡∏î‡∏∂‡∏á userId ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤\"\nconst lineUserId = $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1\"].json.line_user_id || null;\n\nfunction toISOWithTimezone(date, offsetHours = 7) {\n  const tzOffset = offsetHours * 60;\n  const localDate = new Date(date.getTime() + tzOffset * 60 * 1000);\n  const year = localDate.getUTCFullYear();\n  const month = String(localDate.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(localDate.getUTCDate()).padStart(2, '0');\n  const hour = String(localDate.getUTCHours()).padStart(2, '0');\n  const minute = String(localDate.getUTCMinutes()).padStart(2, '0');\n  const second = String(localDate.getUTCSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day}T${hour}:${minute}:${second}+07:00`;\n}\n\n// ‡∏Å‡∏£‡∏≠‡∏á event ‡∏ó‡∏µ‡πà‡∏°‡∏µ start.dateTime ‡πÅ‡∏•‡∏∞ end.dateTime\nconst validEvents = events.filter(event => event.start && event.start.dateTime && event.end && event.end.dateTime);\n\nif (validEvents.length === 0) {\n  return [{ json: {} }];\n}\n\n// ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)\nconst latestEvent = validEvents.reduce((a, b) =>\n  new Date(a.start.dateTime) > new Date(b.start.dateTime) ? a : b\n);\n\nconst startTime = new Date(latestEvent.start.dateTime);\nconst endTime = new Date(latestEvent.end.dateTime);\n\nreturn [{\n  json: {\n    line_user_id: lineUserId,\n    title: latestEvent.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\",\n    eventId: latestEvent.id || null,\n    startTime: toISOWithTimezone(startTime),\n    endTime: toISOWithTimezone(endTime)\n  }\n}];\n"
      },
      "id": "ab9c3492-b294-4e8a-ba26-1118ed91fac5",
      "name": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î2",
      "type": "n8n-nodes-base.code",
      "position": [
        -2096,
        208
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/primary/events ?timeMin={{ $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1\"].json.timeMin }} &timeMax={{ $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1\"].json.timeMax }} &singleEvents=true &orderBy=startTime",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "256ef9ca-0588-4073-9440-28a8bd5c0efc",
      "name": "HTTP Request : GetAll to Calendar2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        208
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "6fe34d67-f5a5-4f03-a872-3c24493aa624",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token2",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1824,
        0
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "8092c217-beca-4abc-9da5-2ed84cb12e70",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token3",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        208
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "5022238d-d10a-43be-b004-f5ed6fdb0d4f",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token4",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1840,
        208
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const userId = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId\n\nconst after = $input.first().json.notifyAt;\n\nreturn [\n  {\n    json: {\n      userId,\n      after\n    }\n  }\n];\n"
      },
      "id": "e82f8a83-ba0e-4615-bdff-4e6745ff808c",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID2",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        208
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚è≥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‚úÖ ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ \\n ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: üîî‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤\",\n              \"wrap\": true,\n              \"weight\": \"bold\",\n              \"size\": \"md\"\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"box\",\n              \"layout\": \"horizontal\",\n              \"spacing\": \"sm\",\n              \"contents\": [\n                {\n                  \"type\": \"button\",\n                  \"style\": \"primary\",\n                  \"color\": \"#2196F3\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"üîÑ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=reschedule\"\n                  }\n                },\n                {\n                  \"type\": \"button\",\n                  \"style\": \"secondary\",\n                  \"color\": \"#D32F2F\",\n                  \"action\": {\n                    \"type\": \"postback\",\n                    \"label\": \"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î\",\n                    \"data\": \"action=cancel\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#2196F3\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "ccf9aa15-85cc-4efd-8fcc-b5209dfb7afb",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        208
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "timeMin",
              "value": "={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4'].json.timeMin }}"
            },
            {
              "name": "timeMax",
              "value": "={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4'].json.timeMax }}"
            },
            {
              "name": "singleEvents",
              "value": "true"
            },
            {
              "name": "=orderBy",
              "value": "startTime"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "b40a4610-04f9-4d20-8f2d-a1c02fd0ed29",
      "name": "HTTP Request : GetAll to Calendar",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        624
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "e56b69ba-981f-49bc-8ef8-35c4fc971001",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        624
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "4ae6c74c-c453-4788-b34f-ead9fc608548",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token5",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1840,
        624
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const userId = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId\n\nconst after = $input.first().json.notifyAt;\n\nreturn [\n  {\n    json: {\n      userId,\n      after\n    }\n  }\n];\n"
      },
      "id": "5735efb6-f153-4270-b1ff-8a2977d07ee2",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events/{{$node[\"Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î3\"].json.eventId}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "ad16bb9b-3abb-40b8-b857-a01788d587f0",
      "name": "HTTP Request : Delete to Calendar",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        624
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚è≥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞ üôÜ‚Äç‚ôÄÔ∏è ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞\",\n              \"wrap\": true,\n              \"weight\": \"bold\",\n              \"size\": \"md\"\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#2196F3\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "6c499391-ae76-467d-89ab-1e842ec8253e",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        624
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=DELETE https://www.googleapis.com/calendar/v3/calendars/primary/events/{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î2'].json.eventId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"summary\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.title }}\",\n  \"start\": {\n    \"dateTime\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.startTime }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  },\n  \"end\": {\n    \"dateTime\": \"{{ $node['Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1'].json.endTime }}\",\n    \"timeZone\": \"Asia/Bangkok\"\n  },\n  \"reminders\": {\n    \"useDefault\": false,\n    \"overrides\": [\n      { \"method\": \"popup\", \"minutes\": 60 },\n      { \"method\": \"popup\", \"minutes\": 10 }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "11d00e65-abc2-4008-b792-55e056466076",
      "name": "HTTP Request : Update to Calendar2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        208
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• events ‡∏à‡∏≤‡∏Å input node (HTTP Request ‡∏´‡∏£‡∏∑‡∏≠ node ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ events ‡∏°‡∏≤)\nconst events = items[0].json.items || [];\n\n// ‡∏î‡∏∂‡∏á line_user_id ‡∏à‡∏≤‡∏Å node ‡∏ä‡∏∑‡πà‡∏≠ \"Code : ‡∏î‡∏∂‡∏á userId ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤\"\nconst lineUserId = $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4'].json.line_user_id || null;\n\nfunction toISOWithTimezone(date, offsetHours = 7) {\n  const tzOffset = offsetHours * 60;\n  const localDate = new Date(date.getTime() + tzOffset * 60 * 1000);\n  const year = localDate.getUTCFullYear();\n  const month = String(localDate.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(localDate.getUTCDate()).padStart(2, '0');\n  const hour = String(localDate.getUTCHours()).padStart(2, '0');\n  const minute = String(localDate.getUTCMinutes()).padStart(2, '0');\n  const second = String(localDate.getUTCSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day}T${hour}:${minute}:${second}+07:00`;\n}\n\n// ‡∏Å‡∏£‡∏≠‡∏á event ‡∏ó‡∏µ‡πà‡∏°‡∏µ start.dateTime ‡πÅ‡∏•‡∏∞ end.dateTime\nconst validEvents = events.filter(event => event.start && event.start.dateTime && event.end && event.end.dateTime);\n\nif (validEvents.length === 0) {\n  return [{ json: {} }];\n}\n\n// ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)\nconst latestEvent = validEvents.reduce((a, b) =>\n  new Date(a.start.dateTime) > new Date(b.start.dateTime) ? a : b\n);\n\nconst startTime = new Date(latestEvent.start.dateTime);\nconst endTime = new Date(latestEvent.end.dateTime);\n\nreturn [{\n  json: {\n    line_user_id: lineUserId,\n    title: latestEvent.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\",\n    eventId: latestEvent.id || null,\n    startTime: toISOWithTimezone(startTime),\n    endTime: toISOWithTimezone(endTime)\n  }\n}];\n"
      },
      "id": "8c4f7a1f-3575-4286-aaf9-fdb8c5bdffb6",
      "name": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î3",
      "type": "n8n-nodes-base.code",
      "position": [
        -2096,
        624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "id": "d6a45339-62b9-43dd-86b8-d11c4d8b7336",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token6",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        976
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "timeMin",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5\"].json.timeMin}}"
            },
            {
              "name": "timeMax",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5\"].json.timeMax}}"
            },
            {
              "name": "singleEvents",
              "value": "true"
            },
            {
              "name": "orderBy",
              "value": "startTime"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "94e1865d-93c6-4d61-a880-376650e2c915",
      "name": "HTTP Request : GetAll to Calendar3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        896
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "d7f79a14-5a4f-45c5-b020-b5f8e34b48db",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{$node[\"HTTP Request : GetAll to Calendar4\"].json[\"items\"] ? $node[\"HTTP Request : GetAll to Calendar4\"].json[\"items\"].length : 0}}\n",
              "rightValue": "=0"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "a2207559-1cb5-40e1-8c76-be52a7983031",
      "name": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ",
      "type": "n8n-nodes-base.if",
      "position": [
        -2096,
        976
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5'].json.timeMin }}&timeMax={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5'].json.timeMax }}&singleEvents=true&orderBy=startTime",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "036f410e-02c5-4de2-b06b-272a80c38655",
      "name": "HTTP Request : GetAll to Calendar4",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        976
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\nconst now = new Date();\nconst dayOfWeek = now.getDay(); // 0=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå, 1=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ...\nconst diffToMonday = dayOfWeek === 0 ? 6 : dayOfWeek - 1;\n\nconst monday = new Date(now);\nmonday.setDate(now.getDate() - diffToMonday);\nmonday.setHours(0, 0, 0, 0);\n\nconst sunday = new Date(monday);\nsunday.setDate(monday.getDate() + 6);\nsunday.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: monday.toISOString(),\n    timeMax: sunday.toISOString(),\n  }\n}];\n"
      },
      "id": "f7540901-1f65-4a4c-b22e-d907c0b502b4",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        976
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": \"‚ùåüìÜ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "a033f408-b81b-498a-86bc-e8285267bd4b",
      "name": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1840,
        1088
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event list ‡∏à‡∏≤‡∏Å response Google Calendar API\nconst calendarResponse = $node[\"HTTP Request : GetAll to Calendar3\"].json;\nconst events = calendarResponse.items || [];  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ items ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô []\n\nconst now = new Date();\n\nlet countDone = 0;\nlet countPending = 0;\nlet countPostponed = 0;\n\nfunction formatThaiFullDate(dateObj) {\n  const thaiDays = [\"‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå\", \"‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå\", \"‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£\", \"‡∏û‡∏∏‡∏ò\", \"‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ\", \"‡∏®‡∏∏‡∏Å‡∏£‡πå\", \"‡πÄ‡∏™‡∏≤‡∏£‡πå\"];\n  const thaiMonths = [\n    \"‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°\", \"‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå\", \"‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°\", \"‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô\", \"‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°\", \"‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô\",\n    \"‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°\", \"‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°\", \"‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô\", \"‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°\", \"‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô\", \"‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°\"\n  ];\n  const dayName = `‡∏ß‡∏±‡∏ô${thaiDays[dateObj.getDay()]}`;\n  const day = dateObj.getDate();\n  const monthName = thaiMonths[dateObj.getMonth()];\n  const yearBE = dateObj.getFullYear() + 543;\n  return `${dayName} ${day} ${monthName} ${yearBE}`;\n}\n\nconst today = new Date();\nconst currentDay = today.getDay();\nconst offsetToMonday = (currentDay + 6) % 7;\nconst monday = new Date(today);\nmonday.setDate(today.getDate() - offsetToMonday);\n\nconst weekDates = Array.from({ length: 7 }).map((_, i) => {\n  const d = new Date(monday);\n  d.setDate(monday.getDate() + i);\n  return d;\n});\n\nconst eventsByDate = {};\nevents.forEach(event => {\n  if (!event.start || !event.start.dateTime) return;\n  const date = event.start.dateTime.split(\"T\")[0];\n  if (!eventsByDate[date]) eventsByDate[date] = [];\n  eventsByDate[date].push(event);\n});\n\nevents.forEach(event => {\n  const desc = (event.description || \"\").toLowerCase();\n  const endTime = event.end?.dateTime ? new Date(event.end.dateTime) : null;\n\n  if (desc.includes(\"‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\")) {\n    countPostponed++;\n    event.status = \"postponed\";\n  } else if (endTime && endTime < now) {\n    countDone++;\n    event.status = \"done\";\n  } else {\n    countPending++;\n    event.status = \"pending\";\n  }\n});\n\nconst noEventsBox = {\n  type: \"box\",\n  layout: \"vertical\",\n  margin: \"md\",\n  paddingAll: \"12px\",\n  cornerRadius: \"md\",\n  backgroundColor: \"#28a745\",\n  contents: [{\n    type: \"text\",\n    text: \"‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n    weight: \"bold\",\n    size: \"md\",\n    color: \"#FFFFFF\",\n    align: \"center\"\n  }]\n};\n\nlet flexContents;\n\nif (events.length === 0) {\n  flexContents = {\n    type: \"bubble\",\n    size: \"mega\",\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        { type: \"text\", text: \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ 7 ‡∏ß‡∏±‡∏ô\", size: \"lg\", weight: \"bold\", margin: \"none\" },\n        { type: \"separator\", margin: \"md\" },\n        noEventsBox\n      ]\n    }\n  };\n} else {\n  const headerRow = {\n    type: \"box\",\n    layout: \"horizontal\",\n    spacing: \"sm\",\n    contents: [\n      { type: \"text\", text: \"üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\", weight: \"bold\", size: \"sm\", flex: 3 },\n      { type: \"text\", text: \"üïí ‡πÄ‡∏ß‡∏•‡∏≤\", weight: \"bold\", size: \"sm\", flex: 2 }\n    ]\n  };\n\n  const rows = weekDates.flatMap((dateObj, dayIndex) => {\n    const isoDate = dateObj.toISOString().split(\"T\")[0];\n    const dayHeader = {\n      type: \"box\",\n      layout: \"horizontal\",\n      spacing: \"sm\",\n      margin: dayIndex === 0 ? \"md\" : \"md\",\n      contents: [{\n        type: \"text\",\n        text: formatThaiFullDate(dateObj),\n        weight: \"bold\",\n        size: \"sm\",\n        flex: 5\n      }]\n    };\n\n    const eventsForDay = eventsByDate[isoDate] || [];\n\n    let section = [dayHeader];\n\n    if (eventsForDay.length === 0) {\n      section.push({\n        type: \"box\",\n        layout: \"horizontal\",\n        spacing: \"sm\",\n        margin: \"sm\",\n        contents: [{\n          type: \"text\",\n          text: \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n          size: \"xs\",\n          color: \"#999999\",\n          wrap: true,\n          flex: 5\n        }]\n      });\n    } else {\n      eventsForDay.forEach((event, idx) => {\n        const timeStart = event.start?.dateTime ? event.start.dateTime.split(\"T\")[1].substring(0, 5) : \"\";\n        const timeEnd = event.end?.dateTime ? event.end.dateTime.split(\"T\")[1].substring(0, 5) : \"\";\n        const timeText = `${timeStart}${timeStart && timeEnd ? \"-\" + timeEnd : \"\"}`;\n\n        let statusSticker = \"\";\n        if (event.status === \"done\") statusSticker = \"‚úÖ\";\n        else if (event.status === \"pending\") statusSticker = \"‚è≥\";\n        else if (event.status === \"postponed\") statusSticker = \"üîÑ\";\n\n        const mainRow = {\n          type: \"box\",\n          layout: \"horizontal\",\n          spacing: \"sm\",\n          margin: \"sm\",\n          contents: [\n            { type: \"text\", text: `${idx + 1}. ${statusSticker} ${event.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\"}`, size: \"sm\", wrap: true, flex: 3 },\n            { type: \"text\", text: timeText, size: \"sm\", wrap: true, flex: 2 }\n          ]\n        };\n\n        const detailRow = {\n          type: \"box\",\n          layout: \"vertical\",\n          margin: \"sm\",\n          contents: [{\n            type: \"text\",\n            text: `üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${event.description || \"‡πÑ‡∏°‡πà‡∏°‡∏µ\"}`,\n            size: \"xs\",\n            wrap: true,\n            color: \"#555555\"\n          }]\n        };\n\n        section.push(mainRow, detailRow);\n      });\n    }\n\n    if (dayIndex < weekDates.length - 1) {\n      section.push({ type: \"separator\", margin: \"md\" });\n    }\n\n    return section;\n  });\n\n  const summaryBox = {\n    type: \"box\",\n    layout: \"vertical\",\n    margin: \"md\",\n    paddingAll: \"12px\",\n    cornerRadius: \"md\",\n    backgroundColor: \"#28a745\",\n    contents: [{\n      type: \"text\",\n      text: `üìä ‡∏™‡∏£‡∏∏‡∏õ: ‡πÄ‡∏™‡∏£‡πá‡∏à ${countDone} | ‡∏Ñ‡πâ‡∏≤‡∏á ${countPending} | ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô ${countPostponed}`,\n      weight: \"bold\",\n      size: \"sm\",\n      color: \"#FFFFFF\",\n      align: \"center\"\n    }]\n  };\n\n  flexContents = {\n    type: \"bubble\",\n    size: \"mega\",\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      spacing: \"md\",\n      contents: [\n        { type: \"text\", text: \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ 7 ‡∏ß‡∏±‡∏ô\", size: \"lg\", weight: \"bold\", margin: \"none\" },\n        { type: \"separator\", margin: \"md\" },\n        headerRow,\n        { type: \"separator\", margin: \"md\" },\n        ...rows,\n        summaryBox\n      ]\n    }\n  };\n}\n\nconst flexMessage = {\n  type: \"flex\",\n  altText: events.length === 0 ? \"‚ùå ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\" : \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\",\n  contents: flexContents\n};\n\n// ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å node ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° (‡πÅ‡∏Å‡πâ‡∏ä‡∏∑‡πà‡∏≠ node ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)\nconst userId = $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5\"].json.line_user_id;\n\nreturn [{\n  json: {\n    line_user_id: userId,\n    messages: [flexMessage]\n  }\n}];\n"
      },
      "id": "1fc02d06-4cb5-48b3-aafb-0c5f30f3f802",
      "name": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        896
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5\"].json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "28bcb39a-08a9-4662-b57b-04980a136044",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token7",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1840,
        896
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ 4 (‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏ß)\n- ‡∏ó‡∏≥‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î /\n",
        "height": 88,
        "width": 420,
        "color": 7
      },
      "id": "14cb2f4c-243a-47e0-b044-08024ba4478c",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token \nFROM google_tokens\nWHERE line_user_id = '{{$json.line_user_id}}'\n  AND (created_at + INTERVAL expires_in SECOND) > NOW()\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "50fc0c41-e084-48b5-9a1f-492664b910db",
      "name": "Execute a SQL query : Get Valid Access Token1",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -448,
        1872
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events/{{$node[\"Execute a SQL query2\"].json.eventId}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"start\": {\n    \"dateTime\": \"{{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.startISO }}\"\n  },\n  \"end\": {\n    \"dateTime\": \"{{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.endISO }}\"\n  }\n}",
        "options": {}
      },
      "id": "1692b011-ab02-41e5-9b9c-d25b5c219e8b",
      "name": "HTTP Request : Update to Calendar",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -240,
        1872
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $node['Code : Extract LINE User ID1'].json.line_user_id }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚úÖ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‚úÖ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\",\n              \"weight\": \"bold\",\n              \"size\": \"lg\",\n              \"color\": \"#00B900\"\n            },\n            {\n              \"type\": \"text\",\n              \"text\": \"‡∏ô‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.startISO.slice(0,10) }} \\n ‡πÄ‡∏ß‡∏•‡∏≤ {{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.startISO.slice(11,16) }} - {{ $node['Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö'].json.endISO.slice(11,16) }} üïí\",\n              \"wrap\": true,\n              \"size\": \"md\"\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"horizontal\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"secondary\",\n              \"color\": \"#D32F2F\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î\",\n                \"data\": \"action=cancel&eventId={{ $json.id }}\"\n              }\n            },\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#2196F3\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "3a9a3bbe-f2ea-4b86-a106-cb09d0ee7ea0",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -16,
        1872
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ========================\n// 1Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Node \"‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"\n// ========================\nconst startISO = $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json.start_datetime \n              || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°\"] \n              || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°\"] \n              || null;\n\nconst endISO   = $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json.end_datetime \n              || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\"] \n              || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î\"] \n              || null;\n\nconst title = $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json.title \n            || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\"] \n            || \"\";\n\nconst description = $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json.description \n                 || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\"] \n                 || \"\";\n\n// ========================\n// 2Ô∏è‚É£ ‡∏î‡∏∂‡∏á AI Agent Output\n// ========================\nconst aiOutputRaw = $node[\"AI Agent\"].json.output || \"{}\";\nconst aiOutputClean = aiOutputRaw.replace(/```json|```|\\n/g, \"\").trim();\nlet aiOutput;\ntry {\n  aiOutput = JSON.parse(aiOutputClean);\n} catch (error) {\n  aiOutput = {};\n}\n\n// ========================\n// 3Ô∏è‚É£ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ / ‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ / raw date)\n// ========================\nconst now = new Date();\nlet day = null;\nlet month = null;\n\nconst textFromAI = aiOutput.text || \"\";\n\n// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ / ‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\nif (textFromAI.includes(\"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\")) {\n  day = now.getDate();\n  month = now.getMonth();\n} else if (textFromAI.includes(\"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\")) {\n  const tomorrow = new Date(now);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  day = tomorrow.getDate();\n  month = tomorrow.getMonth();\n} else {\n  // ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å Node ISO\n  const rawDate = $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json.date \n                || $node[\"Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO\"].json[\"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\"] \n                || null;\n  if (rawDate) {\n    const parts = rawDate.split(/[-\\/]/); // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö DD-MM ‡∏´‡∏£‡∏∑‡∏≠ DD/MM\n    day = parseInt(parts[0], 10);\n    month = parseInt(parts[1], 10) - 1; // JS month 0-11\n  } else {\n    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£ ‚Üí ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\n    day = now.getDate();\n    month = now.getMonth();\n  }\n}\n\n// ‡∏™‡∏£‡πâ‡∏≤‡∏á Date object ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\nlet dt = new Date(now.getFullYear(), month, day);\n\n// ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏µ\nif (dt < now) {\n  dt.setFullYear(now.getFullYear() + 1);\n}\n\n// ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô YYYY-MM-DD\nconst date = dt.toISOString().slice(0, 10);\n\n// ========================\n// 4Ô∏è‚É£ ‡∏î‡∏∂‡∏á action ‡∏à‡∏≤‡∏Å AI Agent\n// ========================\nconst actionFromAI = aiOutput.action || null;\n\n// ========================\n// 5Ô∏è‚É£ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å JSON ‡∏ï‡∏≤‡∏° action\n// ========================\nif (actionFromAI === 'incomplete') {\n  return [{ json: { action: \"incomplete\", startISO, endISO, date, title, description } }];\n}\n\nif (actionFromAI === 'create') {\n  return [{ json: { action: \"create\", startISO, endISO, date, title, description } }];\n}\n\nif (actionFromAI === 'reschedule') {\n  return [{ json: { action: \"reschedule\", startISO, endISO, date, title, description } }];\n}\n\n// ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‚Üí incomplete\nreturn [{ json: { action: \"incomplete\", startISO, endISO, date, title, description } }];\n"
      },
      "id": "070a9f96-6bae-4e4c-a7ad-01e716d50cee",
      "name": "Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
      "type": "n8n-nodes-base.code",
      "position": [
        -2288,
        1856
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b05e3b61-114c-4df4-9b2e-1251bb2ce518",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json[\"action\"]}}",
                    "rightValue": "incomplete"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "incomplete"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "8304db0d-537d-4e53-9d05-b57d94e92b65",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json[\"action\"]}}",
                    "rightValue": "reschedule"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "reschedule"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "92e65772-a898-42ed-8d99-02175e6bfb27",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json[\"action\"]}}",
                    "rightValue": "create"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "create"
            }
          ]
        },
        "options": {}
      },
      "id": "098b4894-8a94-4822-8d0c-1a27324ad45f",
      "name": "Switch: action",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1920,
        1840
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  if ($('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events && $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId) {\n    item.json.line_user_id = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId;\n  } else {\n    item.json.line_user_id = \"empty\";\n  }\n  return item;\n});\n"
      },
      "id": "4a002ca8-2562-4dcb-94ec-5c775fba8bb4",
      "name": "Code : Extract LINE User ID1",
      "type": "n8n-nodes-base.code",
      "position": [
        -672,
        1872
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "width": 1232
      },
      "id": "57a454ef-c890-4ce0-b736-5afd9a9c1a5b",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3744,
        2144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const webhookOutput = $json; // Assuming input is webhook data JSON\n\n// ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å events[0].source.userId\nconst lineUserId = webhookOutput.body?.events?.[0]?.source?.userId || null;\n\n// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° / postback data\nconst messageText = webhookOutput.body?.events?.[0]?.message?.text || \"\";\nconst postbackDataRaw = webhookOutput.body?.events?.[0]?.postback?.data || \"\";\n\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏á postback data\nfunction parsePostbackData(str) {\n  return str.split(\"&\").reduce((acc, part) => {\n    const [key, value] = part.split(\"=\");\n    acc[key] = decodeURIComponent(value || \"\");\n    return acc;\n  }, {});\n}\n\n// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î action ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô\nlet action = \"default\";\nlet text = \"\";\n\nif (postbackDataRaw) {\n  const postbackData = parsePostbackData(postbackDataRaw);\n  if (postbackData.action) {\n    action = postbackData.action;\n  }\n  text = postbackDataRaw; // ‡πÄ‡∏Å‡πá‡∏ö raw postback data ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\n} else {\n  text = messageText.trim();\n  const lowerText = text.toLowerCase();\n\n  if (lowerText === \"‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤\") action = \"notify_early\";\n  else if (lowerText === \"‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤\") action = \"notify_exact\";\n  else if (lowerText === \"‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î\") action = \"reschedule\";\n  else if (lowerText === \"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏±‡∏î\") action = \"cancel\";\n  else if (lowerText === \"‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á\") action = \"request_schedule\";\n  else if (lowerText === \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\" ) {\n    action = \"request_week_schedule\";\n  }\n  else if (lowerText === \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\" || lowerText === \"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\") {\n    action = \"request_today_schedule\";\n  }\n  else if (lowerText === \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\" || lowerText === \"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\") {\n    action = \"request_tomorrow_schedule\";\n  }\n}\n\n// ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏° userId\nreturn [\n  {\n    json: {\n      line_user_id: lineUserId,\n      action,\n      text\n    }\n  }\n];\n"
      },
      "id": "cdab35a6-171c-4bf1-bc37-bc360a970b4d",
      "name": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
      "type": "n8n-nodes-base.code",
      "position": [
        -4960,
        1056
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a3dc88a8-9e2b-4101-aa63-0ad46d04c0f0",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "notify_early"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "notify_early"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "04750984-a15b-4c6b-9f2c-27285634d3e9",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "notify_exact"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "notify_exact"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b193f652-b8b8-4ebd-abc2-f7799066c1a0",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "reschedule"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reschedule"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b8c3bae3-f5fc-481a-9e1f-8fb1a1ab7cc5",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "cancel"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cancel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2d7f8df1-265d-46c1-97fc-a790e985be77",
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "request_schedule",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "request_schedule"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0c33caf6-dc82-484d-89d3-dd597ed92d4b",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "request_week_schedule"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "request_week_schedule"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "318a2f88-90b2-41d7-afd2-18b6bd641507",
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "request_today_schedule",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "request_today_schedule"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "00a5c9c8-ce7d-4f6c-b858-559e01ba8f77",
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "request_tomorrow_schedule",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "request_tomorrow_schedule"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "3b0613f2-5309-4f4a-8faf-c744ffe638f6",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json[\"action\"] }}",
                    "rightValue": "default"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "default"
            }
          ]
        },
        "options": {}
      },
      "id": "33e2381f-cb07-41bd-944b-8b24812872cd",
      "name": "Switch: Check action",
      "type": "n8n-nodes-base.switch",
      "position": [
        -3216,
        832
      ],
      "typeVersion": 3.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const userId = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first().json.body.events[0].source.userId\n\nconst after = $input.first().json.notifyAt;\n\nreturn [\n  {\n    json: {\n      userId,\n      after\n    }\n  }\n];\n"
      },
      "id": "6b5708ba-b61e-48bc-9624-e4671a3cb9f4",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID3",
      "type": "n8n-nodes-base.code",
      "position": [
        -2624,
        400
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO user_event_status (userId, eventId)\nVALUES ('{{$node[\"Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user\"].json.body.events[0].source.userId}}', '{{$node[\"HTTP Request : Create to Calendar1\"].json.id}}')\nON DUPLICATE KEY UPDATE\neventId = VALUES(eventId),\nupdated_at = CURRENT_TIMESTAMP;",
        "options": {}
      },
      "id": "664787c0-58a1-497b-abc7-e7bb0c2f7c72",
      "name": "Execute a SQL query : INSERT EventId",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -32,
        2240
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT eventId \nFROM user_event_status \nWHERE userId = '{{$node[\"Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user\"].json.body.events[0].source.userId}}'\nORDER BY updated_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "7fed1d80-aea1-46cb-a623-99f6fea21d99",
      "name": "Execute a SQL query2",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -912,
        1872
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ 5 (‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏ß;-;)\n- ‡∏ó‡∏≥‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤\n- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ ‡∏û‡∏¥‡∏°‡∏û‡πå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å, ‡∏Ç‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á, ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏±‡∏î \n- ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô flex message ‡∏´‡∏£‡∏∑‡∏≠ message\n- ‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ ‡πÄ‡∏™‡∏£‡πá‡∏à, ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å, ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô",
        "height": 152,
        "width": 420,
        "color": 6
      },
      "id": "ff7b8121-69a7-4614-a2e7-f90cf32ba0d2",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $node['Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID'].json.line_user_id }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\",\n              \"weight\": \"bold\",\n              \"size\": \"lg\",\n              \"color\": \"#00B900\"\n            },\n            {\n              \"type\": \"text\",\n              \"text\": \"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì {{ $node['Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID'].json.displayName }}! \\n‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß\",\n              \"wrap\": true,\n              \"size\": \"md\"\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"horizontal\",\n          \"spacing\": \"sm\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#2196F3\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "2f20d177-f98c-40c0-8ff8-b9bdd322da31",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2752,
        2192
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ada7b911-6045-488c-9bfe-c99214110d2c",
              "leftValue": "={{ $json.login }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3968,
        880
      ],
      "id": "1b7c23ef-49ef-4c15-8aa5-2310fac26a1b",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "const lineUserId = $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json.line_user_id;\nconst messageText = $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json.message_text;\n\nconst results = $node[\"SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\"].json;\n\nif (!results || Object.keys(results).length === 0) {\n  return [\n    {\n      json: {\n        login: false,\n        userId: lineUserId\n      }\n    }\n  ];\n}\n\nreturn [\n  {\n    json: {\n      login: true,\n      userId: lineUserId,\n      userData: results,\n      message_text: messageText\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4144,
        880
      ],
      "id": "f346e136-fd40-4378-b960-88517e20b3cd",
      "name": "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡πà‡∏≤‡∏ã‡πâ‡∏≥‡∏°‡∏±‡πâ‡∏¢"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Google ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡πà‡∏∞\",\n              \"wrap\": true\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"horizontal\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#66c229\",\n              \"action\": {\n                \"type\": \"uri\",\n                \"label\": \"‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö\",\n                \"uri\": \"https://logical-factor-464404-d1.web.app/connect-calendar.html\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "3df8159e-6c51-4056-85e8-200dfe9623e6",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -3776,
        992
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token, refresh_token, expires_in\nFROM google_tokens\nWHERE line_user_id = '{{ $json[\"line_user_id\"] }}'\n  AND DATE_ADD(created_at, INTERVAL expires_in SECOND) > NOW()\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -4720,
        1056
      ],
      "id": "10255f91-db04-4e62-9c37-5c1f29076957",
      "name": "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      line_user_id: $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json.line_user_id,\n      action: $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json.action,\n      text: $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json.text\n    }\n  }\n];"
      },
      "id": "ed77f2a0-901e-4088-a049-c7e35e57d50a",
      "name": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2",
      "type": "n8n-nodes-base.code",
      "position": [
        -3440,
        864
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d8bdb65-b324-4e05-9812-adf7b0a0da25",
              "leftValue": "={{ $json.login }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4352,
        1056
      ],
      "id": "fab36db7-1207-43ee-ba14-36458126509b",
      "name": "IF: Access Token Valid?"
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å MySQL Node\nconst results = $node[\"SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\"]?.items || []; // ‡∏ñ‡πâ‡∏≤ undefined ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á\n\nif (results.length === 0) {\n  // ‡πÑ‡∏°‡πà‡∏°‡∏µ row ‚Üí user ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login\n  return [\n    { json: { login: false, userId: $json[\"line_user_id\"] } }\n  ];\n} else {\n  // ‡∏°‡∏µ row ‚Üí user login ‡πÅ‡∏•‡πâ‡∏ß\n  return [\n    { json: { \n        login: true, \n        userId: $json[\"line_user_id\"], \n        userData: results[0].json, \n        message_text: $json[\"message_text\"] \n      } \n    }\n  ];\n}\n"
      },
      "id": "6ce222bb-a6b2-4b9b-b2a0-52cadff852dc",
      "name": "Code : True or False",
      "type": "n8n-nodes-base.code",
      "position": [
        -4528,
        1056
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://oauth2.googleapis.com/token",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "=application/x-www-form-urlencoded"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "=564269152078-8amd2iqgc6o20294u2k97jngevian8lg.apps.googleusercontent.com"
            },
            {
              "name": "client_secret",
              "value": "=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"
            },
            {
              "name": "grant_type",
              "value": "=refresh_token"
            },
            {
              "name": "refresh_token",
              "value": "={{ $json[\"refresh_token\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "450b6b4f-6023-472c-9cb4-570b50096342",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -3984,
        1248
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token, refresh_token\nFROM google_tokens\nWHERE line_user_id = '{{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json[\"line_user_id\"] }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -4192,
        1248
      ],
      "id": "cdd9d211-2bca-4692-9c79-ed7bceced10c",
      "name": "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß1",
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE google_tokens\nSET access_token = '{{ $json[\"access_token\"] }}',\n    created_at = NOW(),\n    expires_in = 3599\nWHERE line_user_id = '{{ $node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\"].json[\"line_user_id\"] }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -3776,
        1248
      ],
      "id": "206070b6-f4ea-4b50-8a95-20b605319fd9",
      "name": "SQL : ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å accessToken ‡πÉ‡∏´‡∏°‡πà",
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏° timezone +07:00\nfunction addTimezone(isoString) {\n  return isoString + \"+07:00\";\n}\n\n// ‡∏î‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå\nconst newStart = new Date(addTimezone($node[\"Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö\"].json.startISO));\nconst newEnd = new Date(addTimezone($node[\"Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö\"].json.endISO));\n\n// ‡∏î‡∏∂‡∏á‡∏ô‡∏±‡∏î‡∏à‡∏≤‡∏Å Google Calendar (HTTP Request Node)\nconst events = $node[\"HTTP Request : Is it exists\"].json.items || [];\n\n// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ event ‡∏ã‡πâ‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏´‡∏°\nconst isDuplicate = events.some(event => {\n  const eventStart = new Date(event.start.dateTime);\n  const eventEnd = new Date(event.end.dateTime);\n  return (newStart < eventEnd && newEnd > eventStart);\n});\n\n// ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏õ Node ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (LINE Message)\nreturn [\n  {\n    json: {\n      isDuplicate,\n      message: isDuplicate\n        ? \"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\"\n        : \"‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1360,
        2064
      ],
      "id": "c9e7689f-8e27-4093-8314-4a10a0d6b629",
      "name": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d17e6850-c388-42b8-948f-093bbc738bd0",
              "leftValue": "={{$json.isDuplicate}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1120,
        2064
      ],
      "id": "a02dd5aa-018c-458d-93fb-20bd6c932841",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏±‡∏î‡πÑ‡∏î‡πâ\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"size\": \"mega\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ\",\n              \"weight\": \"bold\",\n              \"size\": \"lg\",\n              \"wrap\": true\n            },\n            {\n              \"type\": \"text\",\n              \"text\": \"‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\",\n              \"wrap\": true\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"style\": \"primary\",\n              \"color\": \"#1E90FF\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "fd288f66-c322-4aa5-a44b-f6307f4a1011",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß4",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -912,
        2016
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "timeMin",
              "value": "={{ $json.timeMin }}"
            },
            {
              "name": "timeMax",
              "value": "={{ $json.timeMax }}"
            },
            {
              "name": "singleEvents",
              "value": "=true"
            },
            {
              "name": "orderBy",
              "value": "=startTime"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "59d73533-70c7-456e-bef3-fe987caed6cb",
      "name": "HTTP Request : Is it exists",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1568,
        2064
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{$node[\"Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2\"].json.line_user_id}}'\n  AND created_at + INTERVAL expires_in SECOND > NOW()\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "61759a4b-0fcb-4300-b225-18b7846036fe",
      "name": "Execute a SQL query : Get Valid Access Token2",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1760,
        2064
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $json.line_user_id }}\",\n  \"messages\": [\n    {\n      \"type\": \"flex\",\n      \"altText\": \"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n      \"contents\": {\n        \"type\": \"bubble\",\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"borderColor\": \"#2196F3\",\n          \"borderWidth\": \"2px\",\n          \"cornerRadius\": \"md\",\n          \"backgroundColor\": \"#E3F2FD\",\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"üìÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n              \"weight\": \"bold\",\n              \"size\": \"lg\",\n              \"color\": \"#0D47A1\"\n            },\n            {\n              \"type\": \"button\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_today_schedule\"\n              },\n              \"margin\": \"md\",\n              \"style\": \"primary\",\n              \"color\": \"#64B5F6\"\n            },\n            {\n              \"type\": \"button\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_tomorrow_schedule\"\n              },\n              \"margin\": \"md\",\n              \"style\": \"primary\",\n              \"color\": \"#42A5F5\"\n            },\n            {\n              \"type\": \"button\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ\",\n                \"data\": \"action=request_week_schedule\"\n              },\n              \"margin\": \"md\",\n              \"style\": \"secondary\",\n              \"color\": \"#2196F3\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "b91e27be-0f2a-4059-91fd-d8bb62234c99",
      "name": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2896,
        800
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{$json.line_user_id}}"
            },
            {
              "name": "messages",
              "value": "={{$json.messages}}"
            }
          ]
        },
        "options": {}
      },
      "id": "8572ede1-b2a4-4d07-905f-d47625eed1c1",
      "name": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        1168
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "id": "70b2c510-02e6-42d4-ad5a-d5611b0021d6",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token8",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        1248
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "timeMin",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week\"].json.timeMin}}"
            },
            {
              "name": "timeMax",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week\"].json.timeMax}}"
            },
            {
              "name": "singleEvents",
              "value": "true"
            },
            {
              "name": "orderBy",
              "value": "startTime"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "0a6e6131-4951-4d3b-b184-0b4ff57254a4",
      "name": "HTTP Request : GetAll to Calendar5",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        1168
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "d7f79a14-5a4f-45c5-b020-b5f8e34b48db",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{$node[\"HTTP Request : GetAll to Calendar6\"].json[\"items\"] ? $node[\"HTTP Request : GetAll to Calendar6\"].json[\"items\"].length : 0}}\n",
              "rightValue": "=0"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "9cbc6f0d-8842-44b6-8830-962c6a480a2d",
      "name": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ1",
      "type": "n8n-nodes-base.if",
      "position": [
        -2096,
        1248
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week'].json.timeMin }}&timeMax={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week'].json.timeMax }}&singleEvents=true&orderBy=startTime",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "77d86d34-3b6f-4932-97d0-ea57e57fd3ba",
      "name": "HTTP Request : GetAll to Calendar6",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        1248
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\nconst now = new Date();\n\nconst startOfDay = new Date(now);\nstartOfDay.setHours(0, 0, 0, 0);\n\nconst endOfDay = new Date(now);\nendOfDay.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: startOfDay.toISOString(),\n    timeMax: endOfDay.toISOString(),\n  }\n}];\n"
      },
      "id": "7fcce2bd-7c5d-4748-80bb-ae477c237261",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        1248
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": \"‚ùåüìÜ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "d28fdfe7-da5d-4339-9449-38679a9416fa",
      "name": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1840,
        1360
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event list ‡∏à‡∏≤‡∏Å response Google Calendar API\nconst calendarResponse = $node[\"HTTP Request : GetAll to Calendar5\"].json;\nconst events = calendarResponse.items || [];  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ items ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô []\n\nconst now = new Date();\n\nlet countDone = 0;\nlet countPending = 0;\nlet countPostponed = 0;\n\nfunction formatThaiFullDate(dateObj) {\n  const thaiDays = [\"‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå\", \"‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå\", \"‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£\", \"‡∏û‡∏∏‡∏ò\", \"‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ\", \"‡∏®‡∏∏‡∏Å‡∏£‡πå\", \"‡πÄ‡∏™‡∏≤‡∏£‡πå\"];\n  const thaiMonths = [\n    \"‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°\", \"‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå\", \"‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°\", \"‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô\", \"‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°\", \"‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô\",\n    \"‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°\", \"‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°\", \"‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô\", \"‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°\", \"‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô\", \"‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°\"\n  ];\n  const dayName = `‡∏ß‡∏±‡∏ô${thaiDays[dateObj.getDay()]}`;\n  const day = dateObj.getDate();\n  const monthName = thaiMonths[dateObj.getMonth()];\n  const yearBE = dateObj.getFullYear() + 543;\n  return `${dayName} ${day} ${monthName} ${yearBE}`;\n}\n\n// ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° events ‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\nconst eventsByDate = {};\nevents.forEach(event => {\n  if (!event.start || !event.start.dateTime) return;\n  const date = event.start.dateTime.split(\"T\")[0];\n  if (!eventsByDate[date]) eventsByDate[date] = [];\n  eventsByDate[date].push(event);\n});\n\n// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î status\nevents.forEach(event => {\n  const desc = (event.description || \"\").toLowerCase();\n  const endTime = event.end?.dateTime ? new Date(event.end.dateTime) : null;\n\n  if (desc.includes(\"‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\")) {\n    countPostponed++;\n    event.status = \"postponed\";\n  } else if (endTime && endTime < now) {\n    countDone++;\n    event.status = \"done\";\n  } else {\n    countPending++;\n    event.status = \"pending\";\n  }\n});\n\n// ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\nconst today = new Date();\nconst isoToday = today.toISOString().split(\"T\")[0];\nconst eventsForToday = eventsByDate[isoToday] || [];\n\nconst noEventsBox = {\n  type: \"box\",\n  layout: \"vertical\",\n  margin: \"md\",\n  paddingAll: \"12px\",\n  cornerRadius: \"md\",\n  backgroundColor: \"#28a745\",\n  contents: [{\n    type: \"text\",\n    text: \"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n    weight: \"bold\",\n    size: \"md\",\n    color: \"#FFFFFF\",\n    align: \"center\"\n  }]\n};\n\nlet flexContents;\n\nconst headerRow = {\n  type: \"box\",\n  layout: \"horizontal\",\n  spacing: \"sm\",\n  contents: [\n    { type: \"text\", text: \"üìå ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\", weight: \"bold\", size: \"sm\", flex: 3 },\n    { type: \"text\", text: \"üïí ‡πÄ‡∏ß‡∏•‡∏≤\", weight: \"bold\", size: \"sm\", flex: 2 }\n  ]\n};\n\nif (eventsForToday.length === 0) {\n  flexContents = {\n    type: \"bubble\",\n    size: \"mega\",\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        { type: \"text\", text: `üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ \\n(${formatThaiFullDate(today)})`, size: \"lg\", weight: \"bold\", margin: \"none\" },\n        { type: \"separator\", margin: \"md\" },\n        noEventsBox\n      ]\n    }\n  };\n} else {\n  const rows = eventsForToday.map((event, idx) => {\n    const timeStart = event.start?.dateTime ? event.start.dateTime.split(\"T\")[1].substring(0, 5) : \"\";\n    const timeEnd = event.end?.dateTime ? event.end.dateTime.split(\"T\")[1].substring(0, 5) : \"\";\n    const timeText = `${timeStart}${timeStart && timeEnd ? \"-\" + timeEnd : \"\"}`;\n\n    let statusSticker = \"\";\n    if (event.status === \"done\") statusSticker = \"‚úÖ\";\n    else if (event.status === \"pending\") statusSticker = \"‚è≥\";\n    else if (event.status === \"postponed\") statusSticker = \"üîÑ\";\n\n    const mainRow = {\n      type: \"box\",\n      layout: \"horizontal\",\n      spacing: \"sm\",\n      margin: \"sm\",\n      contents: [\n        { type: \"text\", text: `${idx + 1}. ${statusSticker} ${event.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\"}`, size: \"sm\", wrap: true, flex: 3 },\n        { type: \"text\", text: timeText, size: \"sm\", wrap: true, flex: 2 }\n      ]\n    };\n\n    const detailRow = {\n      type: \"box\",\n      layout: \"vertical\",\n      margin: \"sm\",\n      contents: [{\n        type: \"text\",\n        text: `üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${event.description || \"‡πÑ‡∏°‡πà‡∏°‡∏µ\"}`,\n        size: \"xs\",\n        wrap: true,\n        color: \"#555555\"\n      }]\n    };\n\n    return [mainRow, detailRow];\n  }).flat();\n\n  const summaryBox = {\n    type: \"box\",\n    layout: \"vertical\",\n    margin: \"md\",\n    paddingAll: \"12px\",\n    cornerRadius: \"md\",\n    backgroundColor: \"#28a745\",\n    contents: [{\n      type: \"text\",\n      text: `üìä ‡∏™‡∏£‡∏∏‡∏õ: ‡πÄ‡∏™‡∏£‡πá‡∏à ${countDone} | ‡∏Ñ‡πâ‡∏≤‡∏á ${countPending} | ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô ${countPostponed}`,\n      weight: \"bold\",\n      size: \"sm\",\n      color: \"#FFFFFF\",\n      align: \"center\"\n    }]\n  };\n\n  flexContents = {\n  type: \"bubble\",\n  size: \"mega\",\n  body: {\n    type: \"box\",\n    layout: \"vertical\",\n    spacing: \"md\",\n    contents: [\n      {\n        type: \"text\",\n        text: \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\",\n        size: \"lg\",\n        weight: \"bold\",\n        align: \"start\",\n        margin: \"none\"\n      },\n      {\n        type: \"text\",\n        text: `üóìÔ∏è ${formatThaiFullDate(today)}`,\n        size: \"sm\",\n        color: \"#666666\",\n        margin: \"xs\"\n      },\n      { type: \"separator\", margin: \"md\" },\n      headerRow,\n      { type: \"separator\", margin: \"md\" },\n      ...rows,\n      summaryBox\n    ]\n  }\n};\n\n}\n\nconst flexMessage = {\n  type: \"flex\",\n  altText: eventsForToday.length === 0 ? \"‚ùå ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\" : \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ\",\n  contents: flexContents\n};\n\n// ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å node ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°\nconst userId = $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week\"].json.line_user_id;\n\nreturn [{\n  json: {\n    line_user_id: userId,\n    messages: [flexMessage]\n  }\n}];\n"
      },
      "id": "8b43eefb-4729-4749-86c6-d66e231189c4",
      "name": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢1",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        1168
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week\"].json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "0b2a6b8f-6db3-4680-a0f1-61cbed16137b",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token9",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1840,
        1200
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{$json.line_user_id}}"
            },
            {
              "name": "messages",
              "value": "={{$json.messages}}"
            }
          ]
        },
        "options": {}
      },
      "id": "856f1a69-6a52-484d-a8c9-f8c6cfbd249d",
      "name": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1088,
        1488
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "id": "645f4264-b775-41a8-96ea-840bf8730584",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token10",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -2624,
        1568
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "timeMin",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1\"].json.timeMin}}"
            },
            {
              "name": "timeMax",
              "value": "={{$node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1\"].json.timeMax}}"
            },
            {
              "name": "singleEvents",
              "value": "true"
            },
            {
              "name": "orderBy",
              "value": "startTime"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "2b20dc62-a06e-4435-9411-10b5c4252350",
      "name": "HTTP Request : GetAll to Calendar7",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1584,
        1488
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "d7f79a14-5a4f-45c5-b020-b5f8e34b48db",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{$node[\"HTTP Request : GetAll to Calendar8\"].json[\"items\"] ? $node[\"HTTP Request : GetAll to Calendar8\"].json[\"items\"].length : 0}}\n",
              "rightValue": "=0"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "4f107071-6831-4c0d-a2e4-337f99ac0558",
      "name": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ2",
      "type": "n8n-nodes-base.if",
      "position": [
        -2096,
        1568
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1'].json.timeMin }}&timeMax={{ $node['Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1'].json.timeMax }}&singleEvents=true&orderBy=startTime",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "31cc10f3-9407-4040-965d-616e03554276",
      "name": "HTTP Request : GetAll to Calendar8",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2336,
        1568
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event ‡∏à‡∏≤‡∏Å Webhook Node ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ 'Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user'\nconst webhook = $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').first();\n\nlet userId = \"empty\";\nif (webhook?.json?.body?.events && webhook.json.body.events[0]?.source?.userId) {\n  userId = webhook.json.body.events[0].source.userId;\n}\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\nconst now = new Date();\n\nconst tomorrow = new Date(now);\ntomorrow.setDate(now.getDate() + 1);\n\nconst startOfTomorrow = new Date(tomorrow);\nstartOfTomorrow.setHours(0, 0, 0, 0);\n\nconst endOfTomorrow = new Date(tomorrow);\nendOfTomorrow.setHours(23, 59, 59, 999);\n\n// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ n8n\nreturn [{\n  json: {\n    line_user_id: userId,\n    timeMin: startOfTomorrow.toISOString(),\n    timeMax: endOfTomorrow.toISOString(),\n  }\n}];\n"
      },
      "id": "2efb2668-f48a-48bf-bea7-efdfe8eb7851",
      "name": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1",
      "type": "n8n-nodes-base.code",
      "position": [
        -2896,
        1568
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/push",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer /YvCzlZ7yFmM8Y2nswOoKbDSyOLKm81Jz7DYvv2jlt6iBl/08OV3S6gWiA609Hy5TS7AxyQCpz07osiyxMrOQZycoYxB5nzGN4CgGaIiOEfawIRi9HRE58bXUtGeG/D1nrBkFvfmB6BqgbvgYj3eVQdB04t89/1O/w1cDnyilFU="
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"to\": \"{{ $('Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user').item.json.body.events[0].source.userId }}\",\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": \"‚ùåüìÜ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "17515181-ed29-4a65-9bfb-2927126dd8ba",
      "name": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1840,
        1680
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// ‡∏î‡∏∂‡∏á event list ‡∏à‡∏≤‡∏Å response Google Calendar API\nconst calendarResponse = $node[\"HTTP Request : GetAll to Calendar7\"].json;\nconst events = calendarResponse.items || [];\nconst now = new Date();\n\nlet countDone = 0;\nlet countPending = 0;\nlet countPostponed = 0;\n\nfunction formatThaiFullDate(dateObj) {\n  const thaiDays = [\"‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå\",\"‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå\",\"‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£\",\"‡∏û‡∏∏‡∏ò\",\"‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ\",\"‡∏®‡∏∏‡∏Å‡∏£‡πå\",\"‡πÄ‡∏™‡∏≤‡∏£‡πå\"];\n  const thaiMonths = [\n    \"‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°\",\"‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå\",\"‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°\",\"‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô\",\"‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°\",\"‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô\",\n    \"‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°\",\"‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°\",\"‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô\",\"‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°\",\"‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô\",\"‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°\"\n  ];\n  const dayName = `‡∏ß‡∏±‡∏ô${thaiDays[dateObj.getDay()]}`;\n  const day = dateObj.getDate();\n  const monthName = thaiMonths[dateObj.getMonth()];\n  const yearBE = dateObj.getFullYear() + 543;\n  return `${dayName} ${day} ${monthName} ${yearBE}`;\n}\n\n// ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å Node ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤\nconst userId = $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1\"].json.line_user_id;\n\n// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\nconst tomorrow = new Date();\ntomorrow.setDate(tomorrow.getDate() + 1);\nconst isoTomorrow = tomorrow.toISOString().split(\"T\")[0];\n\n// ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° events ‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\nconst eventsByDate = {};\nevents.forEach(event => {\n  if (!event.start || !event.start.dateTime) return;\n  const date = event.start.dateTime.split(\"T\")[0];\n  if (!eventsByDate[date]) eventsByDate[date] = [];\n  eventsByDate[date].push(event);\n});\n\nconst eventsForTomorrow = eventsByDate[isoTomorrow] || [];\n\n// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î status\neventsForTomorrow.forEach(event => {\n  const desc = (event.description || \"\").toLowerCase();\n  const endTime = event.end?.dateTime ? new Date(event.end.dateTime) : null;\n\n  if (desc.includes(\"‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô\")) {\n    countPostponed++;\n    event.status = \"postponed\";\n  } else if (endTime && endTime < now) {\n    countDone++;\n    event.status = \"done\";\n  } else {\n    countPending++;\n    event.status = \"pending\";\n  }\n});\n\nconst noEventsBox = {\n  type: \"box\",\n  layout: \"vertical\",\n  margin: \"md\",\n  paddingAll: \"12px\",\n  cornerRadius: \"md\",\n  backgroundColor: \"#28a745\",\n  contents: [{\n    type: \"text\",\n    text: \"‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\",\n    weight: \"bold\",\n    size: \"md\",\n    color: \"#FFFFFF\",\n    align: \"center\"\n  }]\n};\n\nlet flexContents;\n\nif (eventsForTomorrow.length === 0) {\n  flexContents = {\n    type: \"bubble\",\n    size: \"mega\",\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        { type: \"text\", text: `üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ (${formatThaiFullDate(tomorrow)})`, size: \"lg\", weight: \"bold\", margin: \"none\" },\n        { type: \"separator\", margin: \"md\" },\n        noEventsBox\n      ]\n    }\n  };\n} else {\n  const rows = eventsForTomorrow.map((event, idx) => {\n    const timeStart = event.start?.dateTime ? event.start.dateTime.split(\"T\")[1].substring(0,5) : \"\";\n    const timeEnd = event.end?.dateTime ? event.end.dateTime.split(\"T\")[1].substring(0,5) : \"\";\n    const timeText = `${timeStart}${timeStart && timeEnd ? \"-\" + timeEnd : \"\"}`;\n\n    let statusSticker = \"\";\n    if (event.status === \"done\") statusSticker = \"‚úÖ\";\n    else if (event.status === \"pending\") statusSticker = \"‚è≥\";\n    else if (event.status === \"postponed\") statusSticker = \"üîÑ\";\n\n    return [\n      {\n        type: \"box\",\n        layout: \"horizontal\",\n        spacing: \"sm\",\n        margin: \"sm\",\n        contents: [\n          { type: \"text\", text: `${idx+1}. ${statusSticker} ${event.summary || \"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠\"}`, size: \"sm\", wrap: true, flex: 3 },\n          { type: \"text\", text: timeText, size: \"sm\", wrap: true, flex: 2 }\n        ]\n      },\n      {\n        type: \"box\",\n        layout: \"vertical\",\n        margin: \"sm\",\n        contents: [{\n          type: \"text\",\n          text: `üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${event.description || \"‡πÑ‡∏°‡πà‡∏°‡∏µ\"}`,\n          size: \"xs\",\n          wrap: true,\n          color: \"#555555\"\n        }]\n      }\n    ];\n  }).flat();\n\n  const summaryBox = {\n    type: \"box\",\n    layout: \"vertical\",\n    margin: \"md\",\n    paddingAll: \"12px\",\n    cornerRadius: \"md\",\n    backgroundColor: \"#28a745\",\n    contents: [{\n      type: \"text\",\n      text: `üìä ‡∏™‡∏£‡∏∏‡∏õ: ‡πÄ‡∏™‡∏£‡πá‡∏à ${countDone} | ‡∏Ñ‡πâ‡∏≤‡∏á ${countPending} | ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô ${countPostponed}`,\n      weight: \"bold\",\n      size: \"sm\",\n      color: \"#FFFFFF\",\n      align: \"center\"\n    }]\n  };\n\n  flexContents = {\n  type: \"bubble\",\n  size: \"mega\",\n  body: {\n    type: \"box\",\n    layout: \"vertical\",\n    spacing: \"md\",\n    contents: [\n      {\n        type: \"text\",\n        text: \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\",\n        size: \"lg\",\n        weight: \"bold\",\n        align: \"start\",\n        margin: \"none\"\n      },\n      {\n        type: \"text\",\n        text: formatThaiFullDate(tomorrow),\n        size: \"sm\",\n        color: \"#666666\",\n        margin: \"xs\"\n      },\n      { type: \"separator\", margin: \"md\" },\n      ...rows,\n      summaryBox\n    ]\n  }\n};\n\n}\n\nconst flexMessage = {\n  type: \"flex\",\n  altText: eventsForTomorrow.length === 0 ? \"‚ùå ‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢\" : \"üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ\",\n  contents: flexContents\n};\n\nreturn [{\n  json: {\n    line_user_id: userId,\n    messages: [flexMessage]\n  }\n}];\n"
      },
      "id": "eeba04e6-ccf4-4507-a4d5-e9b24633db46",
      "name": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢2",
      "type": "n8n-nodes-base.code",
      "position": [
        -1328,
        1488
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT access_token\nFROM google_tokens\nWHERE line_user_id = '{{ $node[\"Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1\"].json.line_user_id }}'\nORDER BY created_at DESC\nLIMIT 1;\n",
        "options": {}
      },
      "id": "6e9c2030-0695-4863-a708-10b82603c715",
      "name": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token11",
      "type": "n8n-nodes-base.mySql",
      "position": [
        -1840,
        1488
      ],
      "typeVersion": 2.4,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "OVDoy6fEqRRzhhWz",
          "name": "MySQL account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user": [
      {
        "json": {
          "body": {
            "events": [
              {
                "mode": "active",
                "type": "message",
                "source": {
                  "type": "user",
                  "userId": "U5bfd068644dcb851b15936683fed14ad"
                },
                "message": {
                  "id": "572874287728295955",
                  "text": "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n\nüìÑ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: ‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏õ‡∏•‡∏≤\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 4 ‡∏™.‡∏Ñ. 68\nüïí ‡πÄ‡∏ß‡∏•‡∏≤: 14.00-15.00\nüìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: ‡πÑ‡∏°‡πà‡∏°‡∏µ",
                  "type": "text",
                  "quoteToken": "nE7x-GtrES9Fr7rjpDvkCg64HneaPtp4Oofio9mg5LBe4rNobsbeW5d7oKlfr-IHSToUMjujYueUQGwrqOFUTGt_xGsUXBumhiUN9UpKwdRRqgMX8cPzFnDzfE_Oqu_sYvVLWVX5g56yUc05fZp74w"
                },
                "timestamp": 1754290988231,
                "replyToken": "5880996a7e744f94b981d61393046044",
                "webhookEventId": "01K1SY89NKAZX15X7VC6HM9TAV",
                "deliveryContext": {
                  "isRedelivery": false
                }
              }
            ],
            "destination": "U827d4139a24c201ea2b587bba1cf831c"
          },
          "query": {},
          "params": {},
          "headers": {
            "host": "13c5122b3eb7.ngrok-free.app",
            "user-agent": "LineBotWebhook/2.0",
            "content-type": "application/json; charset=utf-8",
            "content-length": "839",
            "accept-encoding": "gzip",
            "x-forwarded-for": "147.92.150.198",
            "x-forwarded-host": "13c5122b3eb7.ngrok-free.app",
            "x-line-signature": "Xcz6Zlnn+14Et+FlSKDv+gderA/IgX7IFI26g5ero6c=",
            "x-forwarded-proto": "https"
          },
          "webhookUrl": "http://localhost:5678/webhook/bot-line",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch: action": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute a SQL query2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute a SQL query : Get Valid Access Token2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query2": {
      "main": [
        [
          {
            "node": "Code : Extract LINE User ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch: Check action": {
      "main": [
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID1": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID2": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏±‡∏ö User2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID3": {
      "main": [
        [
          {
            "node": "HTTP Request2 : ‡πÉ‡∏´‡πâ user ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code : Extract LINE User ID": {
      "main": [
        [
          {
            "node": "Execute a SQL query : Get Valid Access Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : Extract LINE User ID1": {
      "main": [
        [
          {
            "node": "Execute a SQL query : Get Valid Access Token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Delete to Calendar": {
      "main": [
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar": {
      "main": [
        [
          {
            "node": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Update to Calendar": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Create to Calendar1": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar1": {
      "main": [
        [
          {
            "node": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar2": {
      "main": [
        [
          {
            "node": "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar3": {
      "main": [
        [
          {
            "node": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar4": {
      "main": [
        [
          {
            "node": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Update to Calendar1": {
      "main": [
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Update to Calendar2": {
      "main": [
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö": {
      "main": [
        [
          {
            "node": "Switch: action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax1": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax2": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax3": {
      "main": [
        [
          {
            "node": "Code : ‡∏î‡∏∂‡∏á UserID3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax4": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : Get Valid Access Token": {
      "main": [
        [
          {
            "node": "HTTP Request : Create to Calendar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : Get Valid Access Token1": {
      "main": [
        [
          {
            "node": "HTTP Request : Update to Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token1": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token2": {
      "main": [
        [
          {
            "node": "HTTP Request : Update to Calendar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token3": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token4": {
      "main": [
        [
          {
            "node": "HTTP Request : Update to Calendar2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token5": {
      "main": [
        [
          {
            "node": "HTTP Request : Delete to Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token6": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token7": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week5": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°": {
      "main": [
        [
          {
            "node": "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î1": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î2": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å EventID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î3": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏•‡πâ‡∏≤‡∏á format, ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ISO": {
      "main": [
        [
          {
            "node": "Code : ‡∏Ñ‡∏£‡∏ö | ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢": {
      "main": [
        [
          {
            "node": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£ Login ‡∏à‡∏≤‡∏Å User": {
      "main": [
        [
          {
            "node": "Code : ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ UserID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß": {
      "main": [
        [
          {
            "node": "Execute a SQL query : INSERT EventId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook : ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å user": {
      "main": [
        [
          {
            "node": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡πà‡∏≤‡∏ã‡πâ‡∏≥‡∏°‡∏±‡πâ‡∏¢": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß": {
      "main": [
        [
          {
            "node": "Code : True or False",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2": {
      "main": [
        [
          {
            "node": "Switch: Check action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: Access Token Valid?": {
      "main": [
        [
          {
            "node": "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡πà‡∏≤‡∏ã‡πâ‡∏≥‡∏°‡∏±‡πâ‡∏¢",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : True or False": {
      "main": [
        [
          {
            "node": "IF: Access Token Valid?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SQL : ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "SQL : ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å accessToken ‡πÉ‡∏´‡∏°‡πà",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SQL : ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å accessToken ‡πÉ‡∏´‡∏°‡πà": {
      "main": [
        [
          {
            "node": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "HTTP Request : ‡πÅ‡∏à‡πâ‡∏á user ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code : Extract LINE User ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : Is it exists": {
      "main": [
        [
          {
            "node": "Code : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : Get Valid Access Token2": {
      "main": [
        [
          {
            "node": "HTTP Request : Is it exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token8": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar5": {
      "main": [
        [
          {
            "node": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ1": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar6": {
      "main": [
        [
          {
            "node": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢1": {
      "main": [
        [
          {
            "node": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token9": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token10": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar7": {
      "main": [
        [
          {
            "node": "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ2": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô week ‡∏ô‡∏µ‡πâ2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request : GetAll to Calendar8": {
      "main": [
        [
          {
            "node": "If : ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ‡∏ô‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏î‡∏∂‡∏á UserID, TimeMin, TimeMax, Week1": {
      "main": [
        [
          {
            "node": "Execute a SQL query : ‡∏î‡∏∂‡∏á access token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code : ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢2": {
      "main": [
        [
          {
            "node": "HTTP Request2 : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô user1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query : ‡∏î‡∏∂‡∏á access token11": {
      "main": [
        [
          {
            "node": "HTTP Request : GetAll to Calendar7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false,
    "timezone": "Asia/Bangkok",
    "errorWorkflow": "yMuBULTM8gyDHDcl",
    "timeSavedPerExecution": 60
  },
  "versionId": "17fccf6d-e5e0-49f6-bd66-3660f86d77f1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "24b584c1fe385a5c477f849f51c07f45f154a8f5534fad6956a6445a888ec644"
  },
  "id": "yMuBULTM8gyDHDcl",
  "tags": []
}